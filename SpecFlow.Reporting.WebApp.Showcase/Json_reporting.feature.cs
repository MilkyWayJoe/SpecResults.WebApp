// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.2.1
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

#pragma warning disable

namespace SpecFlow.Reporting.WebApp.Showcase
{
    using TechTalk.SpecFlow;

    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.2.1")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Json reporting")]
    [NUnit.Framework.CategoryAttribute("Plugin")]
    public partial class JsonReportingFeature
    {
        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "Json_reporting.feature"
#line hidden

        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Json reporting", "Story\r\n=====\r\nIn order to get testresults in JSON format\r\nAs a developer\r\nI want " +
                    "to learn about [SpecFlow.Reporting.Json](https://www.nuget.org/packages/SpecFlow" +
                    ".Reporting.Json/)", ProgrammingLanguage.CSharp, new string[] {
                        "Plugin"});
            testRunner.OnFeatureStart(featureInfo);
        }

        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }

        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Learn how to install the SpecFlow.Reporting.Json package")]
        [NUnit.Framework.CategoryAttribute("Howto:install")]
        public virtual void LearnHowToInstallTheSpecFlow_Reporting_JsonPackage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Learn how to install the SpecFlow.Reporting.Json package", new string[] {
                        "Howto:install"});
#line 10
            this.ScenarioSetup(scenarioInfo);
#line 11
            testRunner.Given("I\'m on \"http://nuget.org\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
            testRunner.When("I enter searchtext \"SpecFlow.Reporting.Json\" in \"searchBoxInput\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
            testRunner.And("I click the search button \"searchBoxSubmit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
            testRunner.And("I click the result with title \"SpecFlow.Reporting.Json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
            testRunner.Then("I can read the instructions on how to install the package", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}

#pragma warning restore

#endregion Designer generated code